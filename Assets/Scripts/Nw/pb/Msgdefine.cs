// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: msgdefine.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MsgDefine {

  /// <summary>Holder for reflection information generated from msgdefine.proto</summary>
  public static partial class MsgdefineReflection {

    #region Descriptor
    /// <summary>File descriptor for msgdefine.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MsgdefineReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9tc2dkZWZpbmUucHJvdG8ipwEKC01zZ0RhdGFIZWFkEhkKDGNvbnRyb2xf",
            "ZmxhZxgBIAEoDUgAiAEBEhgKC2NvbnRyb2xfY21kGAIgASgNSAGIAQESFAoH",
            "YWNrX2lkeBgDIAEoDUgCiAEBEhQKB21zZ19pZHgYBCABKA1IA4gBAUIPCg1f",
            "Y29udHJvbF9mbGFnQg4KDF9jb250cm9sX2NtZEIKCghfYWNrX2lkeEIKCghf",
            "bXNnX2lkeCJqCgpNc2dTZXNzaW9uEhQKB3Nlc3Npb24YASABKAZIAIgBARIS",
            "CgVjaGVjaxgCIAEoB0gBiAEBEhIKBWluZGV4GAMgASgNSAKIAQFCCgoIX3Nl",
            "c3Npb25CCAoGX2NoZWNrQggKBl9pbmRleCK7AQoHTXNnUGFydBIUCgdtc2df",
            "aWR4GAEgASgNSACIAQESFQoIcGFydF9pZHgYAiABKA1IAYgBARIVCghwYXJ0",
            "X21heBgDIAEoDUgCiAEBEhUKCG1zZ19uYW1lGAQgASgJSAOIAQESFQoIbXNn",
            "X2JvZHkYBSABKAxIBIgBAUIKCghfbXNnX2lkeEILCglfcGFydF9pZHhCCwoJ",
            "X3BhcnRfbWF4QgsKCV9tc2dfbmFtZUILCglfbXNnX2JvZHkqSwoPVFVkcENv",
            "bnRyb2xGbGFnEhQKEFBST1RPX0ZMQUdfRVJST1IQABINCglQUk9UT19DTUQQ",
            "ARITCg5QUk9UT19ORUVEX0FDSxCAASpRCg5UVWRwQ29udHJvbENtZBITCg9Q",
            "Uk9UT19DTURfRVJST1IQABIRCg1QUk9UT19DTURfQUNLEAESFwoTUFJPVE9f",
            "Q01EX0hFQVJUQkVBVBACQgyqAglNc2dEZWZpbmViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::MsgDefine.TUdpControlFlag), typeof(global::MsgDefine.TUdpControlCmd), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MsgDefine.MsgDataHead), global::MsgDefine.MsgDataHead.Parser, new[]{ "ControlFlag", "ControlCmd", "AckIdx", "MsgIdx" }, new[]{ "ControlFlag", "ControlCmd", "AckIdx", "MsgIdx" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MsgDefine.MsgSession), global::MsgDefine.MsgSession.Parser, new[]{ "Session", "Check", "Index" }, new[]{ "Session", "Check", "Index" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MsgDefine.MsgPart), global::MsgDefine.MsgPart.Parser, new[]{ "MsgIdx", "PartIdx", "PartMax", "MsgName", "MsgBody" }, new[]{ "MsgIdx", "PartIdx", "PartMax", "MsgName", "MsgBody" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum TUdpControlFlag {
    [pbr::OriginalName("PROTO_FLAG_ERROR")] ProtoFlagError = 0,
    [pbr::OriginalName("PROTO_CMD")] ProtoCmd = 1,
    [pbr::OriginalName("PROTO_NEED_ACK")] ProtoNeedAck = 128,
  }

  public enum TUdpControlCmd {
    [pbr::OriginalName("PROTO_CMD_ERROR")] ProtoCmdError = 0,
    [pbr::OriginalName("PROTO_CMD_ACK")] ProtoCmdAck = 1,
    [pbr::OriginalName("PROTO_CMD_HEARTBEAT")] ProtoCmdHeartbeat = 2,
  }

  #endregion

  #region Messages
  public sealed partial class MsgDataHead : pb::IMessage<MsgDataHead>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgDataHead> _parser = new pb::MessageParser<MsgDataHead>(() => new MsgDataHead());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MsgDataHead> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MsgDefine.MsgdefineReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MsgDataHead() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MsgDataHead(MsgDataHead other) : this() {
      _hasBits0 = other._hasBits0;
      controlFlag_ = other.controlFlag_;
      controlCmd_ = other.controlCmd_;
      ackIdx_ = other.ackIdx_;
      msgIdx_ = other.msgIdx_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MsgDataHead Clone() {
      return new MsgDataHead(this);
    }

    /// <summary>Field number for the "control_flag" field.</summary>
    public const int ControlFlagFieldNumber = 1;
    private uint controlFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ControlFlag {
      get { if ((_hasBits0 & 1) != 0) { return controlFlag_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        controlFlag_ = value;
      }
    }
    /// <summary>Gets whether the "control_flag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasControlFlag {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "control_flag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearControlFlag() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "control_cmd" field.</summary>
    public const int ControlCmdFieldNumber = 2;
    private uint controlCmd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ControlCmd {
      get { if ((_hasBits0 & 2) != 0) { return controlCmd_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        controlCmd_ = value;
      }
    }
    /// <summary>Gets whether the "control_cmd" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasControlCmd {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "control_cmd" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearControlCmd() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "ack_idx" field.</summary>
    public const int AckIdxFieldNumber = 3;
    private uint ackIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AckIdx {
      get { if ((_hasBits0 & 4) != 0) { return ackIdx_; } else { return 0; } }
      set {
        _hasBits0 |= 4;
        ackIdx_ = value;
      }
    }
    /// <summary>Gets whether the "ack_idx" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAckIdx {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "ack_idx" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAckIdx() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "msg_idx" field.</summary>
    public const int MsgIdxFieldNumber = 4;
    private uint msgIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MsgIdx {
      get { if ((_hasBits0 & 8) != 0) { return msgIdx_; } else { return 0; } }
      set {
        _hasBits0 |= 8;
        msgIdx_ = value;
      }
    }
    /// <summary>Gets whether the "msg_idx" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMsgIdx {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "msg_idx" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMsgIdx() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MsgDataHead);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MsgDataHead other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ControlFlag != other.ControlFlag) return false;
      if (ControlCmd != other.ControlCmd) return false;
      if (AckIdx != other.AckIdx) return false;
      if (MsgIdx != other.MsgIdx) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasControlFlag) hash ^= ControlFlag.GetHashCode();
      if (HasControlCmd) hash ^= ControlCmd.GetHashCode();
      if (HasAckIdx) hash ^= AckIdx.GetHashCode();
      if (HasMsgIdx) hash ^= MsgIdx.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasControlFlag) {
        output.WriteRawTag(8);
        output.WriteUInt32(ControlFlag);
      }
      if (HasControlCmd) {
        output.WriteRawTag(16);
        output.WriteUInt32(ControlCmd);
      }
      if (HasAckIdx) {
        output.WriteRawTag(24);
        output.WriteUInt32(AckIdx);
      }
      if (HasMsgIdx) {
        output.WriteRawTag(32);
        output.WriteUInt32(MsgIdx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasControlFlag) {
        output.WriteRawTag(8);
        output.WriteUInt32(ControlFlag);
      }
      if (HasControlCmd) {
        output.WriteRawTag(16);
        output.WriteUInt32(ControlCmd);
      }
      if (HasAckIdx) {
        output.WriteRawTag(24);
        output.WriteUInt32(AckIdx);
      }
      if (HasMsgIdx) {
        output.WriteRawTag(32);
        output.WriteUInt32(MsgIdx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasControlFlag) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ControlFlag);
      }
      if (HasControlCmd) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ControlCmd);
      }
      if (HasAckIdx) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AckIdx);
      }
      if (HasMsgIdx) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MsgIdx);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MsgDataHead other) {
      if (other == null) {
        return;
      }
      if (other.HasControlFlag) {
        ControlFlag = other.ControlFlag;
      }
      if (other.HasControlCmd) {
        ControlCmd = other.ControlCmd;
      }
      if (other.HasAckIdx) {
        AckIdx = other.AckIdx;
      }
      if (other.HasMsgIdx) {
        MsgIdx = other.MsgIdx;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ControlFlag = input.ReadUInt32();
            break;
          }
          case 16: {
            ControlCmd = input.ReadUInt32();
            break;
          }
          case 24: {
            AckIdx = input.ReadUInt32();
            break;
          }
          case 32: {
            MsgIdx = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ControlFlag = input.ReadUInt32();
            break;
          }
          case 16: {
            ControlCmd = input.ReadUInt32();
            break;
          }
          case 24: {
            AckIdx = input.ReadUInt32();
            break;
          }
          case 32: {
            MsgIdx = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MsgSession : pb::IMessage<MsgSession>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgSession> _parser = new pb::MessageParser<MsgSession>(() => new MsgSession());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MsgSession> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MsgDefine.MsgdefineReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MsgSession() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MsgSession(MsgSession other) : this() {
      _hasBits0 = other._hasBits0;
      session_ = other.session_;
      check_ = other.check_;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MsgSession Clone() {
      return new MsgSession(this);
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 1;
    private ulong session_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Session {
      get { if ((_hasBits0 & 1) != 0) { return session_; } else { return 0UL; } }
      set {
        _hasBits0 |= 1;
        session_ = value;
      }
    }
    /// <summary>Gets whether the "session" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSession {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "session" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSession() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "check" field.</summary>
    public const int CheckFieldNumber = 2;
    private uint check_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Check {
      get { if ((_hasBits0 & 2) != 0) { return check_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        check_ = value;
      }
    }
    /// <summary>Gets whether the "check" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCheck {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "check" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCheck() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 3;
    private uint index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Index {
      get { if ((_hasBits0 & 4) != 0) { return index_; } else { return 0; } }
      set {
        _hasBits0 |= 4;
        index_ = value;
      }
    }
    /// <summary>Gets whether the "index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIndex {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIndex() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MsgSession);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MsgSession other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Session != other.Session) return false;
      if (Check != other.Check) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSession) hash ^= Session.GetHashCode();
      if (HasCheck) hash ^= Check.GetHashCode();
      if (HasIndex) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSession) {
        output.WriteRawTag(9);
        output.WriteFixed64(Session);
      }
      if (HasCheck) {
        output.WriteRawTag(21);
        output.WriteFixed32(Check);
      }
      if (HasIndex) {
        output.WriteRawTag(24);
        output.WriteUInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSession) {
        output.WriteRawTag(9);
        output.WriteFixed64(Session);
      }
      if (HasCheck) {
        output.WriteRawTag(21);
        output.WriteFixed32(Check);
      }
      if (HasIndex) {
        output.WriteRawTag(24);
        output.WriteUInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSession) {
        size += 1 + 8;
      }
      if (HasCheck) {
        size += 1 + 4;
      }
      if (HasIndex) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MsgSession other) {
      if (other == null) {
        return;
      }
      if (other.HasSession) {
        Session = other.Session;
      }
      if (other.HasCheck) {
        Check = other.Check;
      }
      if (other.HasIndex) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Session = input.ReadFixed64();
            break;
          }
          case 21: {
            Check = input.ReadFixed32();
            break;
          }
          case 24: {
            Index = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Session = input.ReadFixed64();
            break;
          }
          case 21: {
            Check = input.ReadFixed32();
            break;
          }
          case 24: {
            Index = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MsgPart : pb::IMessage<MsgPart>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgPart> _parser = new pb::MessageParser<MsgPart>(() => new MsgPart());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MsgPart> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MsgDefine.MsgdefineReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MsgPart() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MsgPart(MsgPart other) : this() {
      _hasBits0 = other._hasBits0;
      msgIdx_ = other.msgIdx_;
      partIdx_ = other.partIdx_;
      partMax_ = other.partMax_;
      msgName_ = other.msgName_;
      msgBody_ = other.msgBody_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MsgPart Clone() {
      return new MsgPart(this);
    }

    /// <summary>Field number for the "msg_idx" field.</summary>
    public const int MsgIdxFieldNumber = 1;
    private uint msgIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MsgIdx {
      get { if ((_hasBits0 & 1) != 0) { return msgIdx_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        msgIdx_ = value;
      }
    }
    /// <summary>Gets whether the "msg_idx" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMsgIdx {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "msg_idx" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMsgIdx() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "part_idx" field.</summary>
    public const int PartIdxFieldNumber = 2;
    private uint partIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PartIdx {
      get { if ((_hasBits0 & 2) != 0) { return partIdx_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        partIdx_ = value;
      }
    }
    /// <summary>Gets whether the "part_idx" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPartIdx {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "part_idx" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPartIdx() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "part_max" field.</summary>
    public const int PartMaxFieldNumber = 3;
    private uint partMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PartMax {
      get { if ((_hasBits0 & 4) != 0) { return partMax_; } else { return 0; } }
      set {
        _hasBits0 |= 4;
        partMax_ = value;
      }
    }
    /// <summary>Gets whether the "part_max" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPartMax {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "part_max" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPartMax() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "msg_name" field.</summary>
    public const int MsgNameFieldNumber = 4;
    private string msgName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MsgName {
      get { return msgName_ ?? ""; }
      set {
        msgName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "msg_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMsgName {
      get { return msgName_ != null; }
    }
    /// <summary>Clears the value of the "msg_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMsgName() {
      msgName_ = null;
    }

    /// <summary>Field number for the "msg_body" field.</summary>
    public const int MsgBodyFieldNumber = 5;
    private pb::ByteString msgBody_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString MsgBody {
      get { return msgBody_ ?? pb::ByteString.Empty; }
      set {
        msgBody_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "msg_body" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMsgBody {
      get { return msgBody_ != null; }
    }
    /// <summary>Clears the value of the "msg_body" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMsgBody() {
      msgBody_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MsgPart);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MsgPart other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgIdx != other.MsgIdx) return false;
      if (PartIdx != other.PartIdx) return false;
      if (PartMax != other.PartMax) return false;
      if (MsgName != other.MsgName) return false;
      if (MsgBody != other.MsgBody) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMsgIdx) hash ^= MsgIdx.GetHashCode();
      if (HasPartIdx) hash ^= PartIdx.GetHashCode();
      if (HasPartMax) hash ^= PartMax.GetHashCode();
      if (HasMsgName) hash ^= MsgName.GetHashCode();
      if (HasMsgBody) hash ^= MsgBody.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMsgIdx) {
        output.WriteRawTag(8);
        output.WriteUInt32(MsgIdx);
      }
      if (HasPartIdx) {
        output.WriteRawTag(16);
        output.WriteUInt32(PartIdx);
      }
      if (HasPartMax) {
        output.WriteRawTag(24);
        output.WriteUInt32(PartMax);
      }
      if (HasMsgName) {
        output.WriteRawTag(34);
        output.WriteString(MsgName);
      }
      if (HasMsgBody) {
        output.WriteRawTag(42);
        output.WriteBytes(MsgBody);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMsgIdx) {
        output.WriteRawTag(8);
        output.WriteUInt32(MsgIdx);
      }
      if (HasPartIdx) {
        output.WriteRawTag(16);
        output.WriteUInt32(PartIdx);
      }
      if (HasPartMax) {
        output.WriteRawTag(24);
        output.WriteUInt32(PartMax);
      }
      if (HasMsgName) {
        output.WriteRawTag(34);
        output.WriteString(MsgName);
      }
      if (HasMsgBody) {
        output.WriteRawTag(42);
        output.WriteBytes(MsgBody);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMsgIdx) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MsgIdx);
      }
      if (HasPartIdx) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PartIdx);
      }
      if (HasPartMax) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PartMax);
      }
      if (HasMsgName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MsgName);
      }
      if (HasMsgBody) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(MsgBody);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MsgPart other) {
      if (other == null) {
        return;
      }
      if (other.HasMsgIdx) {
        MsgIdx = other.MsgIdx;
      }
      if (other.HasPartIdx) {
        PartIdx = other.PartIdx;
      }
      if (other.HasPartMax) {
        PartMax = other.PartMax;
      }
      if (other.HasMsgName) {
        MsgName = other.MsgName;
      }
      if (other.HasMsgBody) {
        MsgBody = other.MsgBody;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MsgIdx = input.ReadUInt32();
            break;
          }
          case 16: {
            PartIdx = input.ReadUInt32();
            break;
          }
          case 24: {
            PartMax = input.ReadUInt32();
            break;
          }
          case 34: {
            MsgName = input.ReadString();
            break;
          }
          case 42: {
            MsgBody = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MsgIdx = input.ReadUInt32();
            break;
          }
          case 16: {
            PartIdx = input.ReadUInt32();
            break;
          }
          case 24: {
            PartMax = input.ReadUInt32();
            break;
          }
          case 34: {
            MsgName = input.ReadString();
            break;
          }
          case 42: {
            MsgBody = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
